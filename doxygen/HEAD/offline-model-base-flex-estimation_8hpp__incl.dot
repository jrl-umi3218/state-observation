digraph "include/state-observation/examples/offline-model-base-flex-estimation.hpp"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="include/state-observation\l/examples/offline-model\l-base-flex-estimation.hpp",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="state-observation/api.h",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="state-observation/flexibility\l-estimation/model-base-ekf\l-flex-estimator-imu.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$model-base-ekf-flex-estimator-imu_8hpp.html",tooltip="Declares the class of the estimation of the flexibility using an extended Kalman filter and a fixed c..."];
  Node3 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="state-observation/flexibility\l-estimation/ekf-flexibility\l-estimator-base.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$ekf-flexibility-estimator-base_8hpp.html",tooltip="Declare the class of the flexibility estimation using the extended Kalman Filter."];
  Node4 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="boost/utility.hpp",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="state-observation/observer\l/extended-kalman-filter.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$extended-kalman-filter_8hpp.html",tooltip=" "];
  Node6 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="state-observation/dynamical\l-system/dynamical-system\l-functor-base.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dynamical-system-functor-base_8hpp.html",tooltip=" "];
  Node7 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="state-observation/tools\l/definitions.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$definitions_8hpp.html",tooltip="Definitions of types and some structures."];
  Node8 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="chrono",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="deque",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="stdexcept",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="vector",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="boost/assert.hpp",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="boost/timer/timer.hpp",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="Eigen/Core",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="Eigen/Geometry",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="boost/math/constants\l/constants.hpp",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="fstream",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="state-observation/tools\l/definitions.hxx",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="state-observation/observer\l/kalman-filter-base.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$kalman-filter-base_8hpp.html",tooltip="Defines the base class of a Kalman filter."];
  Node20 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="state-observation/observer\l/zero-delay-observer.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$zero-delay-observer_8hpp.html",tooltip="Defines the base class of online zero delay observers. Zero delay observers are the classical state o..."];
  Node21 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="state-observation/observer\l/observer-base.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$observer-base_8hpp.html",tooltip="Defines the base class of a state observer. The observer is destinated to any dynamical system with a..."];
  Node22 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 -> Node23 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="boost/static_assert.hpp",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node22 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 -> Node24 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="state-observation/tools\l/state-vector-arithmetics.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$state-vector-arithmetics_8hpp.html",tooltip=" "];
  Node24 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 -> Node25 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="state-observation/flexibility\l-estimation/flexibility-estimator\l-base.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$flexibility-estimator-base_8hpp.html",tooltip="Definitions of base class for flexibility estimator."];
  Node25 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 -> Node26 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="state-observation/flexibility\l-estimation/imu-elastic-local\l-frame-dynamical-system.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$imu-elastic-local-frame-dynamical-system_8hpp.html",tooltip=" "];
  Node26 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 -> Node27 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="state-observation/noise\l/noise-base.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$noise-base_8hpp.html",tooltip=" "];
  Node27 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 -> Node28 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="state-observation/sensors\l-simulation/accelerometer\l-gyrometer.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$accelerometer-gyrometer_8hpp.html",tooltip="Implements the accelerometer-gyrometer inertial measuremen."];
  Node28 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 -> Node29 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="state-observation/sensors\l-simulation/algebraic-sensor.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$algebraic-sensor_8hpp.html",tooltip="Gives a base class for algebraic sensors."];
  Node29 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 -> Node30 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="state-observation/sensors\l-simulation/sensor-base.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$sensor-base_8hpp.html",tooltip="Implements the base class of all sensors."];
  Node30 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 -> Node27 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 -> Node31 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="state-observation/sensors\l-simulation/algorithm/linear\l-acceleration.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$linear-acceleration_8hpp.html",tooltip="Implements the accelerometer algorithm."];
  Node31 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 -> Node32 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="state-observation/sensors\l-simulation/algorithm/rotation\l-velocity.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rotation-velocity_8hpp.html",tooltip="The implementation of the algorithm of a rotation velocity sensor."];
  Node32 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 -> Node33 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="state-observation/tools\l/hrp2.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$hrp2_8hpp.html",tooltip="Definitions of Hrp2 constants."];
  Node33 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 -> Node34 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="state-observation/tools\l/rigid-body-kinematics.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$rigid-body-kinematics_8hpp.html",tooltip="Implements integrators for the kinematics, in terms or rotations and translations."];
  Node34 -> Node35 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="Eigen/SVD",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node34 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 -> Node36 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="state-observation/tools\l/miscellaneous-algorithms.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$miscellaneous-algorithms_8hpp.html",tooltip="Gathers many kinds of algorithms."];
  Node36 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 -> Node37 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="cmath",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node36 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 -> Node38 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="state-observation/tools\l/probability-law-simulation.hpp",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$probability-law-simulation_8hpp.html",tooltip=" "];
  Node38 -> Node39 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 [label="random",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node38 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 -> Node40 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="state-observation/tools\l/probability-law-simulation.hxx",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node34 -> Node41 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="state-observation/tools\l/rigid-body-kinematics.hxx",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node26 -> Node42 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="Eigen/Cholesky",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node1 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 -> Node43 [color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="state-observation/examples\l/offline-model-base-flex\l-estimation.hxx",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
}
